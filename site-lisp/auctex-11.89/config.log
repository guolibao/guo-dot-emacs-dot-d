This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by auctex configure 11.89, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  $ ./configure --prefix=C:/Program Files/Emacs --infodir=C:/Program Files/Emacs/info --with-texmf-dir=C:\texlive\texmf-local

## --------- ##
## Platform. ##
## --------- ##

hostname = SOF-GUOLB8245
uname -m = x86_64
uname -r = 2.5.2(0.297/5/3)
uname -s = CYGWIN_NT-6.1
uname -v = 2016-06-23 14:29

/usr/bin/uname -p = unknown
/bin/uname -X     = unknown

/bin/arch              = x86_64
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /usr/local/bin
PATH: /usr/bin
PATH: /usr/bin
PATH: /cygdrive/c/ProgramData/Oracle/Java/javapath
PATH: /cygdrive/c/Program Files (x86)/Intel/iCLS Client
PATH: /cygdrive/c/Program Files/Intel/iCLS Client
PATH: /cygdrive/c/windows/system32
PATH: /cygdrive/c/windows
PATH: /cygdrive/c/windows/System32/Wbem
PATH: /cygdrive/c/windows/System32/WindowsPowerShell/v1.0
PATH: /cygdrive/c/Program Files (x86)/Intel/Intel(R) Management Engine Components/DAL
PATH: /cygdrive/c/Program Files/Intel/Intel(R) Management Engine Components/DAL
PATH: /cygdrive/c/Program Files (x86)/Intel/Intel(R) Management Engine Components/IPT
PATH: /cygdrive/c/Program Files/Intel/Intel(R) Management Engine Components/IPT
PATH: /cygdrive/c/Program Files/TortoiseSVN/bin
PATH: /cygdrive/c/Program Files (x86)/QuickTime/QTSystem
PATH: /cygdrive/c/texlive/2015/bin/win32


## ----------- ##
## Core tests. ##
## ----------- ##

configure:1799: checking for make
configure:1815: found /usr/bin/make
configure:1826: result: make
configure:1842: checking whether make sets $(MAKE)
configure:1864: result: yes
configure:1916: checking for a BSD-compatible install
configure:1984: result: /usr/bin/install -c
configure:1997: checking for date in ChangeLog
configure:2004: result: 2015-11-13
configure:2006: checking for release in ChangeLog
configure:2015: result: 11.89
configure:2023: checking for date in ChangeLog
configure:2030: result: 2015-11-13
configure:2032: checking for release in ChangeLog
configure:2041: result: 11.89
configure:2092: checking for emacs
configure:2110: found C:/Program Files/Emacs/bin/emacs
configure:2122: result: C:/Program Files/Emacs/bin/emacs
configure:2138: checking if C:/Program Files/Emacs/bin/emacs is XEmacs
C:/Program Files/Emacs/bin/emacs -batch -no-site-file -eval (let* ((x (if (featurep (quote xemacs)) "yes" "no"))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-10888"))
Wrote d:/03_others/_Software/auctex-11.89/auctex-11.89/conftest-10888
=> no
configure:2158: result: no
configure:2162: checking for Emacs prefix
C:/Program Files/Emacs/bin/emacs -batch -no-site-file -eval (let* ((cmd(pop command-line-args-left))(x (condition-case nil (let*
    ((prefix (directory-file-name (file-name-directory (executable-find cmd))))
     (parent (directory-file-name (file-name-directory prefix))))
    (if (string= (file-name-nondirectory prefix) "bin")
        (setq prefix parent)
      (if (string= (file-name-nondirectory parent) "bin")
         (setq prefix (directory-file-name (file-name-directory parent)))))
    prefix) (error NONE)))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-10888")) C:/Program Files/Emacs/bin/emacs
Wrote d:/03_others/_Software/auctex-11.89/auctex-11.89/conftest-10888
=> c:/Program Files/Emacs
configure:2181: result: "c:/Program Files/Emacs"
configure:2211: checking if Emacs is recent enough
C:/Program Files/Emacs/bin/emacs -batch -no-site-file -eval (let* ((x (cond ((< emacs-major-version 21) "no")
			 ((> emacs-major-version 21) "yes")
			 ((< emacs-minor-version 01) "no")
			 (t "yes")))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-10888"))
Wrote d:/03_others/_Software/auctex-11.89/auctex-11.89/conftest-10888
=> yes
configure:2225: result: yes
configure:2235: checking for MULE support
C:/Program Files/Emacs/bin/emacs -batch -eval (let* ((x (condition-case nil (require 'mule ) 	(error (prog1 nil (message "mule not found")))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-10888"))
Wrote d:/03_others/_Software/auctex-11.89/auctex-11.89/conftest-10888
=> mule
configure:2269: result: yes
configure:2314: checking if build directory is valid
C:/Program Files/Emacs/bin/emacs -batch -eval (let* ((x (if (or (member (directory-file-name default-directory) load-path)	      (member (file-name-as-directory default-directory) load-path))	 "no" "yes"))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-10888"))
Wrote d:/03_others/_Software/auctex-11.89/auctex-11.89/conftest-10888
=> yes
configure:2330: result: yes
configure:2429: checking where lisp files go
C:/Program Files/Emacs/bin/emacs -batch -eval (let* ((prefix(pop command-line-args-left)) (expanded(pop command-line-args-left)) (x (catch 22
       (let (reldir (dirs load-path))
	  (dolist (name (list "emacs/site-lisp" "emacs/site-packages"
	         "site-lisp" "site-packages") "NONE")
	    (dolist (dir dirs)
	      (when (and dir
	      	         (setq dir (directory-file-name dir))
                         (file-name-absolute-p dir)
	      	         (file-directory-p dir)
	                 (not (string-match "\\`\\.\\."
                           (setq reldir (file-relative-name dir expanded))))
			 (not (file-name-absolute-p reldir))
                         (let ((name name) (dir dir))
		           (while (and dir name
		                       (string= (file-name-nondirectory dir)
		                                (file-name-nondirectory name))
                              (setq dir (file-name-directory dir)
				   name (file-name-directory name))
			      (if (and dir name)
			         (setq dir (directory-file-name dir)
			              name (directory-file-name name)))))
		            (null name))
		   (throw 22
                      (if (string= reldir ".") (directory-file-name prefix)
                        (concat (file-name-as-directory prefix)
                                reldir))))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-10888")) ${datadir}/emacs C:/Program Files/Emacs/share/emacs
Wrote d:/03_others/_Software/auctex-11.89/auctex-11.89/conftest-10888
=> ${datadir}/emacs/site-lisp
configure:2501: result: ${datadir}/emacs/site-lisp
configure:2505: checking what file to use for auctex startup
configure:2532: result: ${datadir}/emacs/site-lisp/auctex.el
configure:2535: checking what file to use for preview startup
configure:2562: result: ${datadir}/emacs/site-lisp/preview-latex.el
configure:2584: checking where the package lisp files go
C:/Program Files/Emacs/bin/emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\\`\\.\\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\\`\\.\\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-10888")) C:/Program Files/Emacs/share/emacs/site-lisp/auctex C:/Program Files/Emacs/share/emacs/site-lisp C:/Program Files/Emacs/share/emacs/site-lisp/tex-site.el
Wrote d:/03_others/_Software/auctex-11.89/auctex-11.89/conftest-10888
=> (expand-file-name "auctex" (file-name-directory load-file-name))
configure:2665: result: ${datadir}/emacs/site-lisp/auctex
configure:2668: checking where the data files go
C:/Program Files/Emacs/bin/emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\\`\\.\\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\\`\\.\\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-10888")) C:/Program Files/Emacs/share/emacs/site-lisp/auctex C:/Program Files/Emacs/share/emacs/site-lisp C:/Program Files/Emacs/share/emacs/site-lisp/tex-site.el
Wrote d:/03_others/_Software/auctex-11.89/auctex-11.89/conftest-10888
=> (expand-file-name "auctex" (file-name-directory load-file-name))
configure:2749: result: ${datadir}/emacs/site-lisp/auctex
C:/Program Files/Emacs/bin/emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\\`\\.\\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\\`\\.\\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-10888"))  C:/Program Files/Emacs/share/emacs/site-lisp C:/Program Files/Emacs/share/emacs/site-lisp/auctex.el tex-site.el
Wrote d:/03_others/_Software/auctex-11.89/auctex-11.89/conftest-10888
=> (expand-file-name "tex-site.el" (file-name-directory load-file-name))
configure:2826: checking where the info files go
configure:2828: result: C:/Program Files/Emacs/info
configure:2839: checking where automatically generated global style hooks go
configure:2849: result: ${localstatedir}/auctex
C:/Program Files/Emacs/bin/emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\\`\\.\\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\\`\\.\\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-10888")) C:/Program Files/Emacs/var/auctex C:/Program Files/Emacs/share/emacs/site-lisp C:/Program Files/Emacs/share/emacs/site-lisp/tex-site.el
Wrote d:/03_others/_Software/auctex-11.89/auctex-11.89/conftest-10888
=> "c:/Program Files/Emacs/var/auctex"
configure:2929: checking for tex
configure:2947: found /cygdrive/c/texlive/2015/bin/win32/tex
configure:2960: result: /cygdrive/c/texlive/2015/bin/win32/tex
configure:2970: checking for pdftex
configure:2988: found /cygdrive/c/texlive/2015/bin/win32/pdftex
configure:3001: result: /cygdrive/c/texlive/2015/bin/win32/pdftex
configure:3011: checking for dvips
configure:3029: found /cygdrive/c/texlive/2015/bin/win32/dvips
configure:3042: result: /cygdrive/c/texlive/2015/bin/win32/dvips
configure:3059: checking for gs
configure:3089: result: no
configure:3059: checking for GSWIN32C.EXE
configure:3089: result: no
C:/Program Files/Emacs/bin/emacs -batch -no-site-file -eval (let* ((dir(pop command-line-args-left))(x (if (member dir (list "NONE" (if (eq system-type 'windows-nt) "GSWIN32C.EXE" "gs"))) "" `(defvar preview-gs-command ,dir)))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-10888")) NONE
Wrote d:/03_others/_Software/auctex-11.89/auctex-11.89/conftest-10888
=> 
configure:3114: checking for latex
configure:3132: found /cygdrive/c/texlive/2015/bin/win32/latex
configure:3145: result: /cygdrive/c/texlive/2015/bin/win32/latex
configure:3161: checking for pdflatex
configure:3179: found /cygdrive/c/texlive/2015/bin/win32/pdflatex
configure:3191: result: /cygdrive/c/texlive/2015/bin/win32/pdflatex
configure:3210: checking for tex
configure:3241: result: /cygdrive/c/texlive/2015/bin/win32/tex
configure:3679: checking for texhash
configure:3697: found /cygdrive/c/texlive/2015/bin/win32/texhash
configure:3709: result: /cygdrive/c/texlive/2015/bin/win32/texhash
configure:3719: checking for initexmf
configure:3746: result: /cygdrive/c/texlive/2015/bin/win32/texhash
configure:3805: checking for glaring installation conflicts
C:/Program Files/Emacs/bin/emacs -batch -eval (let* ((packagelispdir(pop command-line-args-left)) (previewstartfile(pop command-line-args-left))(x 
     (concat
       (and (setq tmp (locate-library "preview.elc"))
            (not (string= (file-truename tmp)
                       (file-truename (expand-file-name "preview.elc"
                                         packagelispdir))))
            (format "Conflicting previous installation in `%s' found!\n"
                    (file-name-directory tmp)))
       (and (setq tmp (locate-library "preview-latex.el"))
            (not (string= (file-truename tmp)
                          (file-truename previewstartfile)))
            (format "Conflicting previous startup file `%s' found!\n" tmp))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-10888")) C:/Program Files/Emacs/share/emacs/site-lisp/auctex C:/Program Files/Emacs/share/emacs/site-lisp/preview-latex.el
Wrote d:/03_others/_Software/auctex-11.89/auctex-11.89/conftest-10888
=> 
configure:3867: result: probably none
configure:3927: checking for perl
configure:3958: result: :
configure:3972: checking for makeinfo
configure:4003: result: :
configure:4013: checking for texi2html
configure:4044: result: :
configure:4054: checking for texi2dvi
configure:4085: result: :
configure:4095: checking for texi2pdf
configure:4126: result: :
configure:4141: checking for install-info
configure:4159: found /usr/bin/install-info
configure:4172: result: /usr/bin/install-info
configure:4415: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by auctex config.status 11.89, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on SOF-GUOLB8245

config.status:768: creating Makefile
config.status:768: creating tex-site.el.out
config.status:768: creating doc/Makefile
config.status:768: creating auctex.el
config.status:768: creating preview.el
config.status:768: creating latex/Makefile

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_env_GS_set=
ac_cv_env_GS_value=
ac_cv_env_INSTALL_INFO_set=
ac_cv_env_INSTALL_INFO_value=
ac_cv_env_MAKEINFO_set=
ac_cv_env_MAKEINFO_value=
ac_cv_env_PERL_set=
ac_cv_env_PERL_value=
ac_cv_env_TEXHASH_set=
ac_cv_env_TEXHASH_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_path_DVIPS=/cygdrive/c/texlive/2015/bin/win32/dvips
ac_cv_path_EMACS='C:/Program Files/Emacs/bin/emacs'
ac_cv_path_INSTALL_INFO=/usr/bin/install-info
ac_cv_path_LATEX=/cygdrive/c/texlive/2015/bin/win32/latex
ac_cv_path_MAKEINFO=:
ac_cv_path_PDFLATEX=/cygdrive/c/texlive/2015/bin/win32/pdflatex
ac_cv_path_PDFTEX=/cygdrive/c/texlive/2015/bin/win32/pdftex
ac_cv_path_PERL=:
ac_cv_path_TEX=/cygdrive/c/texlive/2015/bin/win32/tex
ac_cv_path_TEXHASH=/cygdrive/c/texlive/2015/bin/win32/texhash
ac_cv_path_TEXI2DVI=:
ac_cv_path_TEXI2HTML=:
ac_cv_path_TEXI2PDF=:
ac_cv_path_install='/usr/bin/install -c'
ac_cv_prog_MAKECMD=make
ac_cv_prog_TEXHASH=/cygdrive/c/texlive/2015/bin/win32/texhash
ac_cv_prog_make_make_set=yes

## ----------------- ##
## Output variables. ##
## ----------------- ##

AUCTEXDATE='2015-11-13'
AUCTEXVERSION='11.89'
DEFS='-DPACKAGE_NAME=\"auctex\" -DPACKAGE_TARNAME=\"auctex\" -DPACKAGE_VERSION=\"11.89\" -DPACKAGE_STRING=\"auctex\ 11.89\" -DPACKAGE_BUGREPORT=\"bug-auctex@gnu.org\" -DPACKAGE_URL=\"\"'
DVIPS='/cygdrive/c/texlive/2015/bin/win32/dvips'
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EMACS='C:/Program\ Files/Emacs/bin/emacs'
EMACS_FLAVOR='emacs'
GS='NONE'
HAVE_mule='yes'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_INFO='/usr/bin/install-info'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
LATEX='/cygdrive/c/texlive/2015/bin/win32/latex'
LIBOBJS=''
LIBS=''
LTLIBOBJS=''
MAKECMD='make'
MAKEINFO=':'
MULEELC='tex-jp.elc'
MULESRC='tex-jp.el'
PACKAGE_BUGREPORT='bug-auctex@gnu.org'
PACKAGE_NAME='auctex'
PACKAGE_STRING='auctex 11.89'
PACKAGE_TARNAME='auctex'
PACKAGE_URL=''
PACKAGE_VERSION='11.89'
PATH_SEPARATOR=':'
PDFLATEX='/cygdrive/c/texlive/2015/bin/win32/pdflatex'
PDFTEX='/cygdrive/c/texlive/2015/bin/win32/pdftex'
PERL=':'
PLAT_LISP='prv-emacs.el'
PREVIEWDATE='2015-11-13'
PREVIEWVERSION='11.89'
SET_MAKE=''
SHELL='/bin/sh'
TEX='/cygdrive/c/texlive/2015/bin/win32/tex'
TEXHASH='/cygdrive/c/texlive/2015/bin/win32/texhash'
TEXI2DVI=':'
TEXI2HTML=':'
TEXI2PDF=':'
TEXMFGEN='preview.sty prauctex.def prauctex.cfg prshowbox.def prshowlabels.def prtracingall.def prtightpage.def prlyx.def prcounters.def prfootnotes.def'
XEMACS='no'
auctexstartfile='${datadir}/emacs/site-lisp/auctex.el'
autodir='${localstatedir}/auctex'
bindir='${exec_prefix}/bin'
build_alias=''
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host_alias=''
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='C:/Program\ Files/Emacs/info'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
lispGS=''
lispautodir='"c:/Program Files/Emacs/var/auctex"'
lispdir='${datadir}/emacs/site-lisp'
lisppackagedatadir='(expand-file-name "auctex" (file-name-directory load-file-name))'
lisppackagelispdir='(expand-file-name "auctex" (file-name-directory load-file-name))'
lisppackagetexstyles=''
lisptexsite='(expand-file-name "tex-site.el" (file-name-directory load-file-name))'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
oldincludedir='/usr/include'
packagedatadir='${datadir}/emacs/site-lisp/auctex'
packagedir='no'
packagelispdir='${datadir}/emacs/site-lisp/auctex'
packagetexstyles=''
pdfdir='${docdir}'
prefix='C:/Program\ Files/Emacs'
preview_enabled='yes'
previewdocdir='C:\\texlive\\texmf-local/doc/latex/styles'
previewstartfile='${datadir}/emacs/site-lisp/preview-latex.el'
previewtexmfdir='C:\\texlive\\texmf-local/tex/latex/preview'
program_transform_name='s,x,x,'
psdir='${docdir}'
runstatedir='${localstatedir}/run'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target_alias=''
texmfdir='C:\\texlive\\texmf-local'
texsite=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "auctex"
#define PACKAGE_TARNAME "auctex"
#define PACKAGE_VERSION "11.89"
#define PACKAGE_STRING "auctex 11.89"
#define PACKAGE_BUGREPORT "bug-auctex@gnu.org"
#define PACKAGE_URL ""

configure: exit 0
